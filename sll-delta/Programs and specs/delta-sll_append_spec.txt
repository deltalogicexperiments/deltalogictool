;;append(x, y) : appends y to the end of x
;;----------------------------------------------------------------------------------
@pre: ls(x, nil) && ls(y, nil) && hls(x, nil) \intersect hls(y, nil) = \empty
&& mkeys(x, nil) \union mkeys(y, nil) = M && hls(x, nil) \mult-union hls(y, nil) = H
;;----------------------------------------------------------------------------------
@post: ls(x, nil) && mkeys(x, nil) = M
&& hls(x, nil) = H
;;----------------------------------------------------------------------------------



if (x == nil)
	x := y 
	return x
else
	temp := x
	while (temp.next != nil)
@inv: temp =/= nil && ls (x, temp) && ls(y, nil) && hls(x, nil) \intersect hls(y, nil) = \empty
&& oldhls = hls(x, nil) \union hls(y, nil)
&& oldmkeys = mkeys(x, nil) \mult-union mkeys(y, nil)	
		temp := temp.next
	endwhile
	temp.next := y
	return x
	

