;;copyall(x): copies x into y
;;---------------------------------------------------------
@pre: ls(x, nil) && mkeys(x, nil) = M && hls(x, nil) = H
;;---------------------------------------------------------
@post: ls(y, nil) && ls(x, nil)
&& hls(x, nil) \intersect hls(y, nil) = \empty
&& mkeys(x, nil) = mkeys(y, nil)
&& mkeys(x, nil) = M && hls(x, nil) = H
;;---------------------------------------------------------

if (x == nil)
	y := nil
	return y
else
	y := alloc()
	temp_x := x.next
	y.key := x.key
	y.next := nil
	temp_y := y
	while (temp_x != nil)
@inv: ls(x, nil) && ls(x, temp_x) && ls(y, temp_y) && temp_y.next = nil  
&& hls(x, nil) \intersect hls(y, nil) = \empty
&& mkeys(x, nil) = mkeys(temp_x, nil) \mult-union mkeys(y, nil)
&& mkeys(x, nil) = M && hls(x, nil) = H
		new_y := alloc()
		new_y.key := temp_x.key
		new_y.next := nil
		temp_y.next := new_y
		temp_y := new_y
		temp_x := temp_x.next
	endwhile
	return y