;;sorted_merge_rec(x, y, ret): merges two sorted lists into another
;;-----------------------------------------------------------------------------------
@pre: ls(x, nil) && ls(y, nil) && sorted(x, nil) && sorted(y, nil) 
&& hls(x, nil) \intersect hls(y, nil) = \empty
&& hls(x, nil) \union hls(y, nil) = H
&& mkeys(x, nil) \mult-union mkeys(y, nil) = M
;;-----------------------------------------------------------------------------------
@post: ls(x, nil) && sorted(x, nil) 
&& hls(x, nil) = H && mkeys(x, nil) = M
;;-----------------------------------------------------------------------------------


if(x == nil)
	ret := y
	return
else
	if(y == nil)
		ret := x
		return
	else
		if(x.key <= y.key)
			temp := x.next
			sorted_merge_rec(temp, y, ret_rec)
			x.next := ret_rec
			ret := x
			return
		else
			temp := y.next
			sorted_merge_rec(x, temp, ret_rec)
			y.next := ret_rec
			ret := y
			return