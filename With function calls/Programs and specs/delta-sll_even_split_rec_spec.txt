;;even_split_rec(x, ff, ss): splits a list x into two (almost) equal lists ff and ss
;;-----------------------------------------------------------------------------------
@pre: ls(x, nil)
&& hls(x, nil) = H
&& mkeys(x, nil) = M
;;-----------------------------------------------------------------------------------
@post: ls(ff, nil) && ls(ss, nil)
&& hls(ff, nil) \union hls(ss, nil) = H
&& mkeys(ff, nil) \mult-union mkeys(ss, nil) = M
&& lslen(ff, nil) =/= lslen(ss, nil) => lslen(ff, nil) = lslen(ss, nil) + 1
;;-----------------------------------------------------------------------------------

if(x == nil || x.next == nil)
	ff := x
	ss := nil
else
	temp := x.next.next
	even_split_rec(temp, ff_temp, ss_temp)
	x.next.next := ss_temp
	ss := x.next
	x.next := ff_temp
	ff := x
	return